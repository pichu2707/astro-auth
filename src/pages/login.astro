---
import { effect } from "astro:schema";
import AuthLayout from "../layouts/AuthLayout.astro";

const email = Astro.cookies.get("email")?.value ?? '';
const rememberMe = !!email;


---
<AuthLayout>
    <div class="flex justify-center self-center  z-10">
        <div class="p-12 bg-white mx-auto rounded-2xl w-100 ">
            <div class="mb-4">
              <h3 class="font-semibold text-2xl text-gray-800">Login</h3>
              <p class="text-gray-500">Please sign in to your account.</p>
            </div>
            <form class="space-y-5">
                <div class="space-y-2">
                      <label class="text-sm font-medium text-gray-700 tracking-wide">Email</label>
              <input 
              class=" w-full text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400" 
              type="email"
              name="email" 
              value={email}
              placeholder="mail@gmail.com">
          </div>
                          <div class="space-y-2">
              <label class="mb-5 text-sm font-medium text-gray-700 tracking-wide">
                Password
              </label>
              <input 
              class="w-full content-center text-base px-4 py-2 border  border-gray-300 rounded-lg focus:outline-none focus:border-green-400" 
              name="password"
              type="password" 
              placeholder="Enter your password">
            </div>
              <div class="flex items-center justify-between">
              <div class="flex items-center">
                <input
                id="remember_me" 
                name="remember_me" 
                type="checkbox" 
                checked={rememberMe}
                class="h-4 w-4 bg-blue-500 focus:ring-blue-400 border-gray-300 rounded">
                <label for="remember_me" class="ml-2 block text-sm text-gray-800">
                  Rercuérdame
                </label>
              </div>
              <div class="text-sm">
                <a href="/register" class="text-green-400 hover:text-green-500">
                  ¿Has olvidado tu contraseña?
                </a>
              </div>
            </div>
            <div>
              <button 
              type="submit" 
              name="submit"
              id="btn-submit"
              class="w-full flex justify-center bg-green-400  hover:bg-green-500 text-gray-100 p-3  rounded-full tracking-wide font-semibold  shadow-lg cursor-pointer transition ease-in duration-500">
                Sign in
              </button>
              <div class="flex flex-1 w-full my-3">
                <div class="w-full border-t-2 border-gray-600 "></div>
              </div>
                <button 
                type="button"
                id="btn-google"
                class="disbled:bg-gray-300 w-full flex justify-center text-white bg-red-400 hover:bg-red-300 p-3 rounded-full tracking-wide font-semibold">Ingresar con Google</button>
            </div>
            </form>
            <div class="pt-5 text-center text-gray-400 text-xs">
              <span>
                Copyright © 2021-{ new Date().getFullYear() }
                <a href="https://codepen.io/uidesignhub" rel="" target="_blank" title="Ajimon" class="text-green hover:text-green-500 ">AJI</a></span>
            </div>
        </div>
      </div>
</AuthLayout>


<script>

import { actions } from "astro:actions";
import { GoogleAuthProvider, signInWithPopup } from "firebase/auth";
import Swal from "sweetalert2";
import { firebase } from "../firebase/config";



const form = document.querySelector('form') as HTMLFormElement;
const btnSubmit = document.querySelector('#btn-submit') as HTMLButtonElement
const btnGoogle = document.querySelector('#btn-google') as HTMLButtonElement


form.addEventListener('submit', async (e) => {
  e.preventDefault(); // Evita la propagación del formulario
  btnSubmit.setAttribute('disabled', 'disabled') // Deshabilita el botón de submit para evitar múltiples envíos

  const formData = new FormData(form);

  const { error } = await actions.loginUser(formData);

  if ( error ) {
    Swal.fire({ //SweetAlert2 nos da el error para que lo pueda ver el usuario
      icon: 'error',
      title: 'Oops...',
      text: error.message,
      confirmButtonText: 'Aceptar',
      confirmButtonColor: '#3085d6',
    });
    btnSubmit.removeAttribute('disabled')
    return;
  }
  window.location.replace('/protected')
});


btnGoogle.addEventListener('click', async () => {
  btnGoogle.setAttribute('disabled', 'disabled') // Deshabilita el botón de submit para evitar múltiples envíos
  const provider = new GoogleAuthProvider();

try {
  //Paso 1: Obtener las credenciales del lado del cliente
  const credentials = await signInWithPopup( firebase.auth, provider );
  console.log(credentials); // Imprime las credenciales en la consola

  // Paso 2: Verificar las credenciales en el servidor

  const { error } = await actions.loginWithGoogle(credentials);

  if ( error ) {
  alert(error.message); // Muestra el error en caso de que haya un problema
  return;
}
  // Paso 3: Redirigir al usuario a la página protegida
  btnGoogle.innerText = 'Redireccionando...'
  window.location.replace('/protected')
  
  // Aquí puedes manejar la respuesta del servidor y redirigir al usuario según sea necesario
} catch (error) {
  console.log(error);
}

btnSubmit.removeAttribute('disabled')
});
</script>